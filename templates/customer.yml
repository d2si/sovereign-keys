# Copyright 2022 Devoteam Revolve (D2SI SAS)
# This file is part of `Sovereign Keys`.
#
# `Sovereign Keys` is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# `Sovereign Keys` is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with `Sovereign Keys`. If not, see <http://www.gnu.org/licenses/>.

AWSTemplateFormatVersion: 2010-09-09
Description: Customer stack
Parameters:
  GloballyUniqueCompanyIdentifier:
    Type: String
  ProjectName:
    Type: String
  CustomerName:
    Type: String
  Amzn2AMILatest:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2
  ToggleMainResourceCreation:
    Type: String

Conditions:
  bToggleMainResourceCreation: !Equals [ !Ref ToggleMainResourceCreation, 'true' ]

Resources:
  CustomerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref CustomerInstanceRole
      InstanceProfileName: !Sub role-${ProjectName}-${CustomerName}-instance
  CustomerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub role-${ProjectName}-${CustomerName}-instance
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: CustomerInstance
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: GetObjectS3
                Effect: Allow
                Action: s3:GetObject
                Resource:
                  - !Sub
                      - arn:${AWS::Partition}:s3:::${bucket}/utils/functional-testing.sh
                      - bucket: {Fn::ImportValue: !Sub '${ProjectName}:S3ArtifactBucketName'}
                  - !Sub
                      - arn:${AWS::Partition}:s3:::${bucket}/agent/*
                      - bucket: {Fn::ImportValue: !Sub '${ProjectName}:S3ArtifactBucketName'}
              - Sid: DescribeCFStacks
                Effect: Allow
                Action: cloudformation:DescribeStacks
                Resource: '*'
              - Sid: KMS
                Effect: Allow
                Action: kms:Decrypt
                Resource:
                  !Sub
                    - arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/${keyid}
                    - keyid: {Fn::ImportValue: !Sub '${ProjectName}:KMSKeyID'}
      Path: /
  EC2Instance:
    Type: AWS::EC2::Instance
    Condition: bToggleMainResourceCreation
    Properties:
      InstanceType: t3.micro
      ImageId: !Ref Amzn2AMILatest
      IamInstanceProfile: !Ref CustomerInstanceProfile
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: {Fn::ImportValue: !Sub '${ProjectName}:${CustomerName}:PublicSubnet1ID'}
          AssociatePublicIpAddress: true
          GroupSet:
            - {Fn::ImportValue: !Sub '${ProjectName}:${CustomerName}:VPCDefaultSG'}
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            KmsKeyId: {Fn::ImportValue: !Sub '${ProjectName}:KMSKeyID'}
            VolumeType: gp3
        - DeviceName: /dev/sdf
          Ebs:
            VolumeSize: 5
            VolumeType: gp3
      UserData:
        Fn::Base64:
          !Sub
            - |
              #!/bin/bash
              yum update -y
              yum install -y jq
              cat > /home/ec2-user/install-sk-agent.sh <<EOF
              #!/bin/bash
              aws s3 cp s3://${bucket}/agent/linux/sovereign-keys-1.1.0-1.noarch.rpm sovereign-keys.rpm &>/dev/null
              sudo rpm -i --force sovereign-keys.rpm
              rm -f sovereign-keys.rpm
              EOF
              chmod +x /home/ec2-user/install-sk-agent.sh
              aws s3 cp s3://${bucket}/utils/functional-testing.sh /home/ec2-user/functional-testing.sh
              chmod +x /home/ec2-user/functional-testing.sh
              chown -R ec2-user:ec2-user /home/ec2-user
              sudo -u ec2-user aws configure set default.region ${AWS::Region}
            - bucket: {Fn::ImportValue: !Sub '${ProjectName}:S3ArtifactBucketName'}
      Tags:
        - Key: Name
          Value: !Sub ec2-${ProjectName}-${CustomerName}-test-instance

  SKRoleArn:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub role-${ProjectName}-${CustomerName}-sk-api
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref AWS::AccountId
            Action: sts:AssumeRole
      Policies:
        - PolicyName: describe-instances
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ec2:DescribeInstances
                Resource: '*'
        - PolicyName: push-logs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:PutObject
                Resource: !Sub ${CustomerAuditBucket.Arn}/*
      Path: /

########################################
# Audit Bucket holding the signed logs #
########################################
  CustomerAuditBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${GloballyUniqueCompanyIdentifier}-${ProjectName}-customer-audit-logs
      VersioningConfiguration:
        Status: Enabled
      ObjectLockEnabled: true
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention:
            Mode: GOVERNANCE
            Years: 10
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

Outputs:
  SKRoleArn:
    Description: Sovereign Keys role arn
    Value: !GetAtt SKRoleArn.Arn
    Export:
      Name: !Sub ${ProjectName}:${CustomerName}:SKRoleArn
  AuditBucket:
    Description: The name of the customer audit bucket
    Value: !Ref CustomerAuditBucket
